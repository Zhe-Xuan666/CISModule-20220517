update.2022/02/25:
modify the program flow, delete CUDA file. 
now you can access image data via pointer.

update.2022/03/01:
add cvt_ByteOrder func. to convert byte order.
add a new folder to measure execution time.

update.2022/03/10:
add new debug message printout to trace code.
add new parameter into cvt_ByteOrder func. to switch different pixel_bit case.
modify 002_make_executableFile sample code to while loop struct.
in 002_make_executableFile folder, add new conditional to detect. if data is same 5 times, stop write file.

update.2022/03/17:
modify 001_make_staticLib/src/get_image.c, change process flow. Solve the problem of receiving photos abnormally.
add RAW6/7/8/16/20 into cvt_ByteOrder func.

update.2022/03/18:
use cam_get_image_ext_fmt func. instead of cam_get_image func.
cam_get_image_ext_fmt has new parameter "fmt", 
you can put in UINT_8/UINT_16/UINT_32/FLOAT_32 to select different data type.

update.2022/03/23:
add new file and path into 000_Modified Code folder to make Xavier can support RAW8/10/12/16.
modify camera_close function in 001_make_staticLib/src/get_image.c.

update.2022/03/30:
add new file and path into 000_Modified Code folder to make Xavier can support RAW16.
add new folder "002_make_executableFile_float" as sample code to show how to use float case.
update sample code in "002_make_executableFile".
modify camera_close function in "001_make_staticLib/src/get_image.c".
add new function in "001_make_staticLib/src/get_image.c".
cvt_ByteOrder_float: /* Convert Data Byte Order */
cam_get_image_ext_fmt: /* Use fmt to decide output buffer format */
change_raw_fmt: /* reset stream and format to clear buf */

update.2022/02/25:
modify the program flow, delete CUDA file. 
now you can access image data via pointer.

update.2022/03/01:
add cvt_ByteOrder func. to convert byte order.
add a new folder to measure execution time.

update.2022/03/10:
add new debug message printout to trace code.
add new parameter into cvt_ByteOrder func. to switch different pixel_bit case.
modify 002_make_executableFile sample code to while loop struct.
in 002_make_executableFile folder, add new conditional to detect. if data is same 5 times, stop write file.

update.2022/03/17:
modify 001_make_staticLib/src/get_image.c, change process flow. Solve the problem of receiving photos abnormally.
add RAW6/7/8/16/20 into cvt_ByteOrder func.

update.2022/03/18:
use cam_get_image_ext_fmt func. instead of cam_get_image func.
cam_get_image_ext_fmt has new parameter "fmt", 
you can put in UINT_8/UINT_16/UINT_32/FLOAT_32 to select different data type.

update.2022/03/23:
add new file and path into 000_Modified Code folder to make Xavier can support RAW8/10/12/16.
modify camera_close function in 001_make_staticLib/src/get_image.c.

update.2022/03/30:
add new file and path into 000_Modified Code folder to make Xavier can support RAW16.
add new folder "002_make_executableFile_float" as sample code to show how to use float case.
update sample code in "002_make_executableFile".
modify camera_close function in "001_make_staticLib/src/get_image.c".
add new function in "001_make_staticLib/src/get_image.c".
cvt_ByteOrder_float: /* Convert Data Byte Order */
cam_get_image_ext_fmt: /* Use fmt to decide output buffer format */
change_raw_fmt: /* reset stream and format to clear buf */

update.2022/04/03:
add new parameter in cam_get_image_ext_fmt func.(*,...*, raw_bit, data_type), you can read the image data via this func.
Since this version, you don't need to define IMAGE_SIZE in config.ini, just need to set the match width and height. 

update.2022/04/20:
fix cam_get_image_ext_fmt func.,now you can get image data via 4 parameter(remove BufferType).
if you want to get Uint8/Uint32/Float data just declare a correspond buffer-type pointer and pass into "out_buffer" in cam_get_image_ext_fmt(void *out_buffer,*,*,*).
add new part to set stride to 32.

update.2022/05/03:
add resize func in get_image.c to resize the width if it is not align to 64.
add new parameter Resize_Width and Resize_Height in config.ini to set resize size.

update.2022/05/17:
fix the crop func. bug.
add V4L2 support to RAW14, via "pixelFormat.h", and kernel modify.
add new V4L2 API to set preferred-stride for situations where the sensor cannot align to VI 64 bytes. It will be calculated by the program, no manual setting is required
Update the config.ini, now you only need to set IMAGE_WIDTH and IMAGE_HEIGHT. If sensor not align to VI 64 bytes, it will auto calculate the parameter setting value.